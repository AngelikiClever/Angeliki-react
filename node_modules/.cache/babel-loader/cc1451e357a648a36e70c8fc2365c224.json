{"ast":null,"code":"import _slicedToArray from \"/Users/angelikezeake/Desktop/reactapp-angeliki/Angeliki-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/angelikezeake/Desktop/reactapp-angeliki/Angeliki-react/src/Topblock.js\";\nimport React, { useState } from \"react\";\nimport \"./Topblock.css\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nexport default function Weather() {\n  let _useSate = useSate(false),\n      _useSate2 = _slicedToArray(_useSate, 2),\n      ready = _useSate2[0],\n      setReady = _useSate2[1];\n\n  let _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      weatherData = _useState2[0],\n      setWeatherData = _useState2[1];\n\n  function handleResponse(response) {\n    setWeatherData({\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      city: response.data.name\n    }); // setTemperature();\n\n    setReady(true);\n  }\n\n  if (ready) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topblock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"pin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDCCD\"), WeatherData.city), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"temperature\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, Math.round(weatherData.temperature)), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"\\xB0C,\"), \" \", weatherData.description, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weathericon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"weathericon\",\n      src: \"https://ssl.gstatic.com/onebox/weather/64/sunny.png\",\n      alt: \"clear\",\n      id: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wind\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Wind \\uD83C\\uDF2C : \", weatherData.wind, \" km/h\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"humidity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Humidity\", /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"drop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"\\uD83D\\uDCA7\"), \" \", \": \", weatherData.humidity, \"%\")));\n  } else {\n    let city = \"Athens\";\n    let apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=6f7db97d4508405a35031f006368bb76&units=metric\");\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}","map":{"version":3,"sources":["/Users/angelikezeake/Desktop/reactapp-angeliki/Angeliki-react/src/Topblock.js"],"names":["React","useState","axios","Weather","useSate","ready","setReady","weatherData","setWeatherData","handleResponse","response","temperature","data","main","temp","wind","speed","humidity","description","weather","city","name","WeatherData","Math","round","apiUrl","get","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,gBAAP;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,OAAT,GAAmB;AAAA,iBACRC,OAAO,CAAC,KAAD,CADC;AAAA;AAAA,MAC3BC,KAD2B;AAAA,MACpBC,QADoB;;AAAA,kBAEIL,QAAQ,CAAC,IAAD,CAFZ;AAAA;AAAA,MAE3BM,WAF2B;AAAA,MAEdC,cAFc;;AAIlC,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAClCF,IAAAA,cAAc,CAAC;AACfG,MAAAA,WAAW,EAAED,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,IADjB;AAEfC,MAAAA,IAAI,EAAEL,QAAQ,CAACE,IAAT,CAAcG,IAAd,CAAmBC,KAFV;AAGfC,MAAAA,QAAQ,EAAEP,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBI,QAHd;AAIfC,MAAAA,WAAW,EAAER,QAAQ,CAACE,IAAT,CAAcO,OAAd,CAAsB,CAAtB,EAAyBD,WAJvB;AAKfE,MAAAA,IAAI,EAAEV,QAAQ,CAACE,IAAT,CAAcS;AALL,KAAD,CAAd,CADkC,CAQlC;;AACAf,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEC;;AAED,MAAID,KAAJ,EAAW;AAIT,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAW,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIGiB,WAAW,CAACF,IAJf,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BG,IAAI,CAACC,KAAL,CAAWjB,WAAW,CAACI,WAAvB,CAA/B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,OAEoBJ,WAAW,CAACW,WAFhC,eAGE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,GAAG,EAAC,qDAFN;AAGE,MAAA,GAAG,EAAC,OAHN;AAIE,MAAA,EAAE,EAAC,MAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CAPF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAiCX,WAAW,CAACQ,IAA7C,UADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AAAM,MAAA,IAAI,EAAC,KAAX;AAAiB,oBAAW,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAIU,GAJV,QAKKR,WAAW,CAACU,QALjB,MAFF,CAnBF,CADF;AAgCD,GApCD,MAsCK;AACH,QAAIG,IAAI,GAAG,QAAX;AACE,QAAIK,MAAM,+DAAwDL,IAAxD,yDAAV;AACJlB,IAAAA,KAAK,CAACwB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBlB,cAAvB;AACA,WAAO,IAAP;AACC;AAGA","sourcesContent":["import React, {useState} from \"react\";\nimport \"./Topblock.css\";\nimport \"./styles.css\";\nimport axios from \"axios\";\n\n\nexport default function Weather() {\n  let [ready, setReady] = useSate(false);\n  let [weatherData, setWeatherData] = useState(null);\n  \nfunction handleResponse(response) {\nsetWeatherData({\ntemperature: response.data.main.temp,\nwind: response.data.wind.speed,\nhumidity: response.data.main.humidity,\ndescription: response.data.weather[0].description,\ncity: response.data.name,\n});\n// setTemperature();\nsetReady(true);\n\n}\n\nif (ready) {\n\n\n\n  return (\n    <div className=\"topblock\">\n      <h1>\n        <span role=\"img\" aria-label=\"pin\">\n          üìç\n        </span>\n        {WeatherData.city}\n      </h1>\n      <h3>\n        <span className=\"temperature\">{Math.round(weatherData.temperature)}</span>\n        <span>¬∞C,</span> {weatherData.description}\n        <div className=\"weathericon\">\n          <img\n            className=\"weathericon\"\n            src=\"https://ssl.gstatic.com/onebox/weather/64/sunny.png\"\n            alt=\"clear\"\n            id=\"icon\"\n          />\n        </div>\n      </h3>\n      <h4>\n        <div className=\"wind\">Wind üå¨ : {weatherData.wind} km/h</div>\n        <div className=\"humidity\">\n          Humidity\n          <span role=\"img\" aria-label=\"drop\">\n            üíß\n          </span>{\" \"}\n          : {weatherData.humidity}%\n        </div>\n      </h4>\n    </div>\n  );\n}\n\nelse {\n  let city = \"Athens\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=6f7db97d4508405a35031f006368bb76&units=metric`;\naxios.get(apiUrl).then(handleResponse);\nreturn null;\n}\n\n\n}"]},"metadata":{},"sourceType":"module"}