{"ast":null,"code":"import _slicedToArray from \"/Users/angelikezeake/Desktop/reactapp-angeliki/Angeliki-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/angelikezeake/Desktop/reactapp-angeliki/Angeliki-react/src/Forecast.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Forecast.css\";\nimport ForecastPreview from \"./ForecastPreview\";\nimport \"./styles.css\";\nexport default function Forecast(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loaded = _useState2[0],\n        setLoaded = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        forecast = _useState4[0],\n        setForecast = _useState4[1];\n\n  function handleForecastResponse(response) {\n    setForecast(response.data);\n    setLoaded(true);\n  }\n\n  if (loaded && props.city === forecast.city.name) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      id: \"forecast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ForecastPreview, {\n      data: forecast.list[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ForecastPreview, {\n      data: forecast.list[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ForecastPreview, {\n      data: forecast.list[2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ForecastPreview, {\n      data: forecast.list[3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ForecastPreview, {\n      data: forecast.list[4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    let apiKey = \"6f7db97d4508405a35031f006368bb76\";\n    let url = \"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(props.city, \"&appid=\").concat(apiKey, \"&units=metric\");\n    axios.get(url).then(handleForecastResponse);\n    return null;\n  }\n}","map":{"version":3,"sources":["/Users/angelikezeake/Desktop/reactapp-angeliki/Angeliki-react/src/Forecast.js"],"names":["React","useState","axios","ForecastPreview","Forecast","props","loaded","setLoaded","forecast","setForecast","handleForecastResponse","response","data","city","name","list","apiKey","url","get","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAO,cAAP;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,oBACVJ,QAAQ,CAAC,KAAD,CADE;AAAA;AAAA,QAC/BK,MAD+B;AAAA,QACvBC,SADuB;;AAAA,qBAENN,QAAQ,CAAC,IAAD,CAFF;AAAA;AAAA,QAE/BO,QAF+B;AAAA,QAErBC,WAFqB;;AAItC,WAASC,sBAAT,CAAgCC,QAAhC,EAA0C;AACxCF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAV,CAAX;AACJL,IAAAA,SAAS,CAAC,IAAD,CAAT;AAEC;;AAED,MAAID,MAAM,IAAID,KAAK,CAACQ,IAAN,KAAeL,QAAQ,CAACK,IAAT,CAAcC,IAA3C,EAAiD;AAC/C,wBAEF;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEN,QAAQ,CAACO,IAAT,CAAc,CAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEP,QAAQ,CAACO,IAAT,CAAc,CAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADR,CAFE;AAeD,GAhBD,MAgBO;AACL,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,gEAAyDZ,KAAK,CAACQ,IAA/D,oBAA6EG,MAA7E,kBAAP;AACAd,IAAAA,KAAK,CAACgB,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBT,sBAApB;AACA,WAAO,IAAP;AACD;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Forecast.css\";\nimport ForecastPreview from \"./ForecastPreview\";\n\nimport \"./styles.css\";\n\nexport default function Forecast(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function handleForecastResponse(response) {\n    setForecast(response.data);\nsetLoaded(true);\n\n}\n\nif (loaded && props.city === forecast.city.name) {\n  return (\n   \n<div className=\"d-flex justify-content-around\">\n        <div className=\"row\" id=\"forecast\">\n          <ForecastPreview data={forecast.list[0]}/>\n          <ForecastPreview data={forecast.list[1]}/>\n          <ForecastPreview data={forecast.list[2]}/>\n          <ForecastPreview data={forecast.list[3]}/>\n          <ForecastPreview data={forecast.list[4]}/>\n        </div>\n        </div>\n\n  )\n\n\n} else {\n  let apiKey = \"6f7db97d4508405a35031f006368bb76\";\n  let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n  axios.get(url).then(handleForecastResponse);\n  return null;\n}\n}\n  \n  "]},"metadata":{},"sourceType":"module"}