{"ast":null,"code":"import _slicedToArray from \"/Users/angelikezeake/Desktop/reactapp-angeliki/Angeliki-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/angelikezeake/Desktop/reactapp-angeliki/Angeliki-react/src/Topblock.js\";\nimport React, { useState } from \"react\";\nimport \"./Topblock.css\";\nimport \"./styles.css\";\nimport Current from \"./Current\";\nimport Forecast from \"./Forecast\";\nimport axios from \"axios\";\nexport default function Weather(props) {\n  const _useState = useState({\n    ready: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        weatherData = _useState2[0],\n        setWeatherData = _useState2[1];\n\n  const _useState3 = useState(props.defaultCity),\n        _useState4 = _slicedToArray(_useState3, 2),\n        city = _useState4[0],\n        setCity = _useState4[1];\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      description: response.data.weather[0].description,\n      city: response.data.name,\n      icon: response.data.weather[0].icon\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  function search() {\n    const apiKey = \"6f7db97d4508405a35031f006368bb76\";\n    let apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(apiKey, \"&units=metric\");\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topblock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Current, {\n      data: weatherData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchengine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-inline\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      class: \"form-control mr-sm-2\",\n      type: \"search\",\n      placeholder: \"\\uD83D\\uDD0E Search City\",\n      \"aria-label\": \"Search\",\n      onChange: handleCityChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success my-2 my-sm-0\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"Go!\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-success my-2 my-sm-0\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, \"Current\")), /*#__PURE__*/React.createElement(Forecast, {\n      city: weatherData.city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }));\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}","map":{"version":3,"sources":["/Users/angelikezeake/Desktop/reactapp-angeliki/Angeliki-react/src/Topblock.js"],"names":["React","useState","Current","Forecast","axios","Weather","props","ready","weatherData","setWeatherData","defaultCity","city","setCity","handleResponse","response","temperature","data","main","temp","wind","speed","humidity","description","weather","name","icon","handleSubmit","event","preventDefault","search","handleCityChange","target","value","apiKey","apiUrl","get","then"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport \"./Topblock.css\";\nimport \"./styles.css\";\nimport Current from \"./Current\";\nimport Forecast from \"./Forecast\";\nimport axios from \"axios\";\n\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n\nfunction handleResponse(response) {\nsetWeatherData({\n  ready: true,\ntemperature: response.data.main.temp,\nwind: response.data.wind.speed,\nhumidity: response.data.main.humidity,\ndescription: response.data.weather[0].description,\ncity: response.data.name,\n      icon: response.data.weather[0].icon,\n\n});\n\n}\n\n function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n   function search() {\n    const apiKey = \"6f7db97d4508405a35031f006368bb76\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\nif (weatherData.ready) {\n\n\n\n  return (\n<div className=\"topblock\">\n  <Current data={weatherData}/>\n      <div className=\"searchengine\">\n      <nav className=\"navbar navbar-light bg-light\" />\n<form className=\"form-inline\"\nonSubmit={handleSubmit} />\n      <input\n        class=\"form-control mr-sm-2\"\n        type=\"search\"\n        placeholder=\"ðŸ”Ž Search City\"\n        aria-label=\"Search\"\n        onChange={handleCityChange}\n\n      />\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n        Go!\n      </button>\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n        Current\n      </button>\n      </div>\n      <Forecast city={weatherData.city} />\n</div>\n      \n\n  );\n}\n\nelse {\n   search();\n    return \"Loading...\";\n}\n}"]},"metadata":{},"sourceType":"module"}